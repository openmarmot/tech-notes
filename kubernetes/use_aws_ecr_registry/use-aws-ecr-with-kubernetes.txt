Use AWS ECR on kubernetes clusters 

! note - as of 2025 I've moved most work on this to ansible. 
see here : https://github.com/openmarmot/ansible-stuff/blob/main/fedora-k3s-with-aws-ecr.yml




-- install awsc cli and configure (on your kubernetes host)--
# note - this only has to be on the main host I believe. after that it pulls the image locally

# install aws cli
# - on ubuntu 18.04 the command is
apt-get install awscli
# - on fedora 40 server it was 
dnf install awscli 

# create a  IAM user in AWS IAM (no console access needed for this user)
# give user AmazonEC2ContainerRegistryFullAccess or other managed policy depending on access level required
# click user in IAM ->Security Credentials -> create access key

# config aws cli. this is where you put in the secret and access key from IAM
# make sure you are choosing the region you want your ecr repo in 
# note this is as root 
aws configure


-- test the aws cli install and permissions --

# get ecr login and pipe to the shell 
aws ecr get-login-password \
    --region <region> \
| docker login \
    --username AWS \
    --password-stdin <aws_account_id>.dkr.ecr.<region>.amazonaws.com

#pull an image
docker pull [image uri from ECR]



# -- cron --
create the ecr_secret_cron.sh script in /root/cron/ (create folder)

# ECR login lasts for 12 hours. lets add a root cron to renew it every 10
crontab -e

# ecr renew cron 
0 */10 * * * sh /root/cron/ecr_secret_cron.sh &>> /var/log/ecr_login_log.txt

# create the log file 
touch /var/log/ecr_login_log.txt

-- test deployment and service --

# here is an example deployment. Note the imagePullSecrets references the secret we created

# danitza-deploy.yml
# make sure to adjust the secret name based on your region and add your image URI
apiVersion: apps/v1
kind: Deployment
metadata:
  name: danitza-deployment
  labels:
    app: danitza
spec:
  replicas: 2
  selector:
    matchLabels:
      app: danitza
  template:
    metadata:
      labels:
        app: danitza
    spec:
      containers:
      - name: danitza
        image: [image uri from ECR]
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: us-west-2-ecr-registry
        
#danitza-service.yml
kind: Service
apiVersion: v1
metadata:
  name: danitza-service
spec:
  selector:
    app: danitza
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30090 
  type: NodePort

# create the deployment and service
kubectl create -f danitza-deploy.yml
kubectl create -f danitza-service.yml

#check
kubectl get deployments -o wide
kubectl get services