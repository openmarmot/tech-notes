Migrate Linux Users

-- notes --
andrew
last update : Nov 25 2019
source : https://access.redhat.com/solutions/179753

--

Copy-pasteable commands are included below. The only thing that potentially needs to be modified is the first line, where the start of the UID & GID ranges is set as a variable. On a RHEL 5 and RHEL 6, normal users & groups typically begin at #500; however, on a RHEL 7 system, this range starts at 1000 by default.

The awk command could be adapted to only grab UIDs and GIDs within specific ranges -- as it stands, it will grab all users and groups with UIDs and GIDs higher than 500.

-------- Step 1, on source ------------
Run the following commands as root on the old (source) system which has users configured

ID_minimum=500
for f in /etc/{passwd,group}; do awk -F: -vID=$ID_minimum '$3>=ID && $1!="nfsnobody"' $f |sort -nt: -k3 > ${f#/etc/}.bak; done
while read line; do grep -w "^${line%%:*}" /etc/shadow; done <passwd.bak >shadow.bak
while read line; do grep -w "^${line%%:*}" /etc/gshadow; done <group.bak >gshadow.bak


After running the above as root on the original source system, 4 new files will be present in the current directory (passwd.bak, group.bak, shadow.bak, and gshadow.bak). Inspect them to ensure the appropriate users and groups were gathered.

Next, transfer each of the 4 files onto the new destination system, using rsync, scp, or some other method.

------ Step 2, on destination -----------------
Run the following command as root on the new (destination) system in a directory containing the four .bak files created in the previous step

 for f in {passwd,group,shadow,gshadow}.bak; do cat $f >>/etc/${f%.bak}; done
 
Note that this will not do any checking to prevent UID/GID collisions with existing users.

Step 3, on destination
Run the following final compound command (copy & paste the whole block) on the new (destination) system in the same directory as the previous step

Raw
for uidgid in $(cut -d: -f3,4 passwd.bak); do
    dir=$(awk -F: /$uidgid/{print\$6} passwd.bak)
    mkdir -vm700 "$dir"; cp -r /etc/skel/.[[:alpha:]]* "$dir"
    chown -R $uidgid "$dir"; ls -ld "$dir"
done
This final command will create home directories for the new users, along with setting proper ownership/permissions and copying the default config files from /etc/skel.

Note: Scripting the backup and transfer of the files in each user's home directory is beyond the scope of this simple article, but don't forget this if it is necessary.